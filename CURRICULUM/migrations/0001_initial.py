# Generated by Django 5.1 on 2024-08-14 18:19

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('total_lessons', models.IntegerField()),
                ('description', models.TextField()),
                ('grade', models.FloatField(blank=True, null=True)),
                ('starting_date', models.DateTimeField()),
                ('ending_date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Curriculum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('grade', models.FloatField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('pass', 'Pass'), ('fail', 'Fail')], max_length=10, null=True)),
                ('certificate_issued', models.BooleanField(default=False)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrolled_date', models.DateTimeField(auto_now_add=True)),
                ('completed', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Lab',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('date', models.DateTimeField()),
                ('instructions', models.TextField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('location', models.CharField(blank=True, help_text='Specify the location where the lab will take place, e.g., Lab Room 101 or Online.', max_length=255, null=True)),
                ('materials_needed', models.TextField(blank=True, help_text='List any materials or equipment needed for the lab, e.g., lab coat, safety goggles, shoes.', null=True)),
                ('max_students', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('title', models.CharField(max_length=500)),
                ('video', models.URLField(blank=True, max_length=2000, null=True)),
                ('content', models.TextField()),
                ('additional_materials', models.FileField(blank=True, null=True, upload_to='lessons/materials/')),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quiz', models.FloatField(default=0)),
                ('test', models.FloatField(default=0)),
                ('midexam', models.FloatField(default=0)),
                ('assignment', models.FloatField(default=0)),
                ('lab_assessment', models.FloatField(default=0)),
                ('final_exam', models.FloatField(default=0)),
                ('total', models.FloatField(default=0)),
            ],
        ),
    ]
